name: ðŸ”‚ Unit tests

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - "prueba1_gha/**"
      - "tests/**"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/workflows/test.yml"

jobs:
  unit-tests:
    strategy:
      matrix:
#        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        python-version: ["3.10", "3.11"]
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry
      - uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - run: poetry env use ${{ matrix.python-version }}
      - run: poetry install
        if: steps.setup-python.outputs.cache-hit != 'true'
      - name: pytest
        run:
          poetry run coverage run -m pytest --showlocals -vv
      - name: coverage xml
        run: poetry run coverage xml -i
        if: ${{ always() }}
      - uses: codecov/codecov-action@v3
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

#  unit-tests-on-windows:
#    name: Python 3.10.0 on Windows
#    runs-on: windows-latest
#    steps:
#      - uses: actions/checkout@v3
#      - run: pipx install poetry
#      - uses: actions/setup-python@v4
#        id: setup-python
#        with:
#          python-version: "3.10.0"
#          cache: "poetry"
#      - run: poetry install
#        if: steps.setup-python.outputs.cache-hit != 'true'
#      - name: pytest
#        run:
#          poetry run coverage run -m pytest --showlocals -vv
#      - name: coverage xml
#        run: poetry run coverage xml -i
#        if: ${{ always() }}
#      - uses: codecov/codecov-action@v3
#        if: ${{ always() }}
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          fail_ci_if_error: true
#          verbose: true
